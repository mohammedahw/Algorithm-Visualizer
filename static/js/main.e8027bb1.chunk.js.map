{"version":3,"sources":["Helpers/helpers.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/insertionSort.js","algorithms/quickSort.js","components/SortingVisualizer.js","components/Navbar.js","App.js","index.js"],"names":["getScreenWidth","document","body","offsetWidth","sleep","time","Promise","callback","setTimeout","bubbleSort","array","arrayBars","a","animatons","i","length","j","push","temp","animateBubbleSort","animations","barOneIdx","barTwoIdx","barOne","barTwo","parseInt","style","height","then","className","mergeSort","auxiliaryArray","slice","mergeSortHelper","animateMergeSort","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","color","newHeight","insertionSort","animateInseritonSort","quickSort","swaps","stack","end","pop","start","partition","pivotIndex","concat","animateQuickSort","pivotValue","generateRandomNumber","min","max","random","arr","SortingVisualizer","useState","setArray","currentAlgorithm","setCurrentAlgorithm","arrayBarsParentElementRef","useRef","buttonsRef","generateNewArray","SCREENWIDTH","newArr","current","children","useEffect","window","addEventListener","removeEventListener","handleAlgorithm","event","handleStart","disabled","ref","onClick","value","target","map","val","index","Navbar","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8027bb1.chunk.js","sourcesContent":["export const getScreenWidth = () => {\r\n  return document.body.offsetWidth * 0.09;\r\n};\r\n\r\nexport const sleep = (time) => {\r\n  return new Promise((callback) => {\r\n    setTimeout(() => {\r\n      callback();\r\n    }, time);\r\n  });\r\n};\r\n","import { sleep } from \"../Helpers/helpers\";\r\n\r\nexport default async function bubbleSort(array, arrayBars) {\r\n  let animatons = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array.length - 1 - i; j++) {\r\n      animatons.push([j, j + 1]);\r\n      if (array[j] > array[j + 1]) {\r\n        let temp = array[j];\r\n        array[j] = array[j + 1];\r\n        array[j + 1] = temp;\r\n      }\r\n    }\r\n  }\r\n  await animateBubbleSort(animatons, arrayBars);\r\n}\r\n\r\nasync function animateBubbleSort(animations, arrayBars) {\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const [barOneIdx, barTwoIdx] = animations[i];\r\n    let barOne = arrayBars[barOneIdx];\r\n    let barTwo = arrayBars[barTwoIdx];\r\n    if (parseInt(barOne.style.height) > parseInt(barTwo.style.height)) {\r\n      await sleep(1).then(() => {\r\n        let temp = barOne.style.height;\r\n        barOne.style.height = barTwo.style.height;\r\n        barTwo.style.height = temp;\r\n      });\r\n    }\r\n    barTwo.className = \"w-1 inline-block mt-0 mr-1 bg-green-800\";\r\n    barOne.className = \"w-1 inline-block mt-0 mr-1 bg-blue-800\";\r\n  }\r\n}\r\n","import { sleep } from \"../Helpers/helpers\";\r\n\r\nexport default async function mergeSort(array, arrayBars) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  await animateMergeSort(animations, arrayBars);\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, j]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, i]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, i]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index i in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([j, j]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([j, j]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index j in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\nasync function animateMergeSort(animations, arrayBars) {\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const isColorChange = i % 3 !== 2;\r\n    if (isColorChange) {\r\n      const [barOneIdx, barTwoIdx] = animations[i];\r\n      const color = i % 3 === 0 ? \"bg-red-800\" : \"bg-green-800\";\r\n      let barOne = arrayBars[barOneIdx];\r\n      let barTwo = arrayBars[barTwoIdx];\r\n      await sleep(1).then(() => {\r\n        barOne.className = `w-1 inline-block mt-0 mr-1 ${color}`;\r\n        barTwo.className = `w-1 inline-block mt-0 mr-1 ${color}`;\r\n      });\r\n    } else {\r\n      await sleep(1).then(() => {\r\n        const [barOneIdx, newHeight] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        barOneStyle.height = `${newHeight}px`;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { sleep } from \"../Helpers/helpers\";\r\n\r\nexport default async function insertionSort(array, arrayBars) {\r\n  let animations = [];\r\n  for (let i = 1; i < array.length; i++) {\r\n    for (let j = i; j > 0; j--) {\r\n      animations.push([j, j - 1]);\r\n      if (array[j] < array[j - 1]) {\r\n        let temp = array[j];\r\n        array[j] = array[j - 1];\r\n        array[j - 1] = temp;\r\n      }\r\n    }\r\n  }\r\n  await animateInseritonSort(arrayBars, animations);\r\n}\r\n\r\nasync function animateInseritonSort(arrayBars, animations) {\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const [barOne, barTwo] = animations[i];\r\n    await sleep(1).then(() => {\r\n      if (\r\n        parseInt(arrayBars[barOne].style.height) <\r\n        parseInt(arrayBars[barTwo].style.height)\r\n      ) {\r\n        let temp = arrayBars[barOne].style.height;\r\n        arrayBars[barOne].style.height = arrayBars[barTwo].style.height;\r\n        arrayBars[barTwo].style.height = temp;\r\n      }\r\n    });\r\n    arrayBars[barOne].className = \"w-1 inline-block mt-0 mr-1 bg-green-800\";\r\n    arrayBars[barTwo].className = \"w-1 inline-block mt-0 mr-1 bg-blue-800\";\r\n  }\r\n}\r\n","import { sleep } from \"../Helpers/helpers\";\r\n\r\nexport default async function quickSort(array, arrayBars) {\r\n  let swaps = [];\r\n  let stack = [];\r\n  stack.push(0);\r\n  stack.push(array.length - 1);\r\n  while (stack[stack.length - 1] >= 0) {\r\n    let end = stack.pop();\r\n    let start = stack.pop();\r\n    let { pivotIndex, animations } = partition(array, start, end);\r\n    swaps = swaps.concat(animations);\r\n    if (pivotIndex - 1 > start) {\r\n      stack.push(start);\r\n      stack.push(pivotIndex - 1);\r\n    }\r\n    if (pivotIndex + 1 < end) {\r\n      stack.push(pivotIndex + 1);\r\n      stack.push(end);\r\n    }\r\n  }\r\n  await animateQuickSort(arrayBars, swaps);\r\n}\r\n\r\nfunction partition(array, start, end) {\r\n  let animations = [];\r\n  const pivotValue = array[end];\r\n  let pivotIndex = start;\r\n  for (let i = start; i < end; i++) {\r\n    if (array[i] < pivotValue) {\r\n      animations.push([i, pivotIndex]);\r\n      let temp = array[i];\r\n      array[i] = array[pivotIndex];\r\n      array[pivotIndex] = temp;\r\n      pivotIndex++;\r\n    }\r\n  }\r\n  animations.push([pivotIndex, end]);\r\n  let temp = array[pivotIndex];\r\n  array[pivotIndex] = array[end];\r\n  array[end] = temp;\r\n  return { pivotIndex, animations };\r\n}\r\n\r\nasync function animateQuickSort(arrayBars, animations) {\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const [barOne, barTwo] = animations[i];\r\n    await sleep(28).then(() => {\r\n      let temp = arrayBars[barOne].style.height;\r\n      arrayBars[barOne].style.height = arrayBars[barTwo].style.height;\r\n      arrayBars[barTwo].style.height = temp;\r\n    });\r\n    arrayBars[barOne].className = \"w-1 inline-block mt-0 mr-1 bg-green-800\";\r\n    arrayBars[barTwo].className = \"w-1 inline-block mt-0 mr-1 bg-green-800\";\r\n  }\r\n}\r\n","import { React, useState, useRef, useEffect } from \"react\";\r\nimport bubbleSort from \"../algorithms/bubbleSort\";\r\nimport mergeSort from \"../algorithms/mergeSort\";\r\nimport insertionSort from \"../algorithms/insertionSort\";\r\nimport { getScreenWidth } from \"../Helpers/helpers\";\r\nimport quickSort from \"../algorithms/quickSort\";\r\n\r\nconst generateRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst arr = [];\r\nfor (let i = 0; i < getScreenWidth(); i++) {\r\n  arr.push(generateRandomNumber(5, 500));\r\n}\r\n\r\nexport default function SortingVisualizer() {\r\n  const [array, setArray] = useState(arr);\r\n  const [currentAlgorithm, setCurrentAlgorithm] = useState(\"\");\r\n  const arrayBarsParentElementRef = useRef(null);\r\n  const buttonsRef = useRef(null);\r\n\r\n  const generateNewArray = () => {\r\n    const SCREENWIDTH = getScreenWidth();\r\n    const newArr = [];\r\n    for (let i = 0; i < SCREENWIDTH; i++) {\r\n      newArr.push(generateRandomNumber(5, 500));\r\n    }\r\n    setArray(newArr);\r\n    setCurrentAlgorithm(\"\");\r\n    for (\r\n      let i = 0;\r\n      i < arrayBarsParentElementRef.current.children.length;\r\n      i++\r\n    ) {\r\n      arrayBarsParentElementRef.current.children[i].className =\r\n        \"w-1 inline-block mt-0 mr-1 bg-blue-800\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", generateNewArray);\r\n    return () => window.removeEventListener(\"resize\", generateNewArray);\r\n  }, []);\r\n\r\n  const handleAlgorithm = (event) => {\r\n    setCurrentAlgorithm(event);\r\n  };\r\n\r\n  const handleStart = async () => {\r\n    for (let i = 0; i < buttonsRef.current.children.length; i++) {\r\n      buttonsRef.current.children[i].disabled = true;\r\n    }\r\n    const arrayBars = arrayBarsParentElementRef.current.children;\r\n    switch (currentAlgorithm) {\r\n      case \"Bubble Sort\":\r\n        await bubbleSort(array, arrayBars);\r\n        break;\r\n      case \"Insertion Sort\":\r\n        await insertionSort(array, arrayBars);\r\n        break;\r\n      case \"Merge Sort\":\r\n        await mergeSort(array, arrayBars);\r\n        break;\r\n      case \"Quick Sort\":\r\n        await quickSort(array, arrayBars);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    for (let i = 0; i < buttonsRef.current.children.length; i++) {\r\n      buttonsRef.current.children[i].disabled = false;\r\n    }\r\n\r\n    for (\r\n      let i = 0;\r\n      i < arrayBarsParentElementRef.current.children.length;\r\n      i++\r\n    ) {\r\n      arrayBarsParentElementRef.current.children[i].className =\r\n        \"w-1 inline-block mt-0 mr-1 bg-purple-800\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"bg-gray-700\" ref={buttonsRef}>\r\n        <button\r\n          onClick={generateNewArray}\r\n          className=\"h-10 px-5 m-2 text-red-100 transition-colors duration-150 bg-red-700 rounded-lg focus:shadow hover:bg-red-800\"\r\n        >\r\n          Generate New Array\r\n        </button>\r\n        <button\r\n          className=\"h-10 px-5 m-2 text-blue-100 transition-colors duration-150 bg-blue-600 rounded-lg focus:shadow hover:bg-blue-700\"\r\n          value=\"Bubble Sort\"\r\n          onClick={(event) => handleAlgorithm(event.target.value)}\r\n        >\r\n          Bubble Sort\r\n        </button>\r\n        <button\r\n          className=\"h-10 px-5 m-2 text-blue-100 transition-colors duration-150 bg-blue-600 rounded-lg focus:shadow hover:bg-blue-700\"\r\n          value=\"Insertion Sort\"\r\n          onClick={(event) => handleAlgorithm(event.target.value)}\r\n        >\r\n          Insertion Sort\r\n        </button>\r\n        <button\r\n          className=\"h-10 px-5 m-2 text-blue-100 transition-colors duration-150 bg-blue-600 rounded-lg focus:shadow hover:bg-blue-700\"\r\n          value=\"Quick Sort\"\r\n          onClick={(event) => handleAlgorithm(event.target.value)}\r\n        >\r\n          Quick Sort\r\n        </button>\r\n        <button\r\n          className=\"h-10 px-5 m-2 text-blue-100 transition-colors duration-150 bg-blue-600 rounded-lg focus:outline-none hover:bg-blue-700\"\r\n          value=\"Merge Sort\"\r\n          onClick={(event) => handleAlgorithm(event.target.value)}\r\n        >\r\n          Merge Sort\r\n        </button>\r\n        {currentAlgorithm === \"\" ? (\r\n          <p></p>\r\n        ) : (\r\n          <button\r\n            className=\"h-10 px-5 m-2 text-green-100 transition-colors duration-150 bg-green-600 rounded-lg focus:shadow hover:bg-green-700\"\r\n            onClick={handleStart}\r\n          >\r\n            Visualize {currentAlgorithm}!\r\n          </button>\r\n        )}\r\n      </nav>\r\n      <div className=\"flex justify-center items-center py-10\">\r\n        <div ref={arrayBarsParentElementRef}>\r\n          {array.map((val, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                style={{ height: `${val}px` }}\r\n                className=\"w-1 inline-block mt-0 mr-1 bg-blue-800\"\r\n              ></div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { GiAtomicSlashes } from \"react-icons/gi\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"bg-gray-800 text-gray-100\">\r\n      <div className=\"px-8 mx-auto py-4\">\r\n        <div className=\"flex justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <div>\r\n              <GiAtomicSlashes className=\"h-8 w-8 mr-2\" />\r\n            </div>\r\n            <div className=\"font-bold text-xl\">Sorting Visalizer</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport SortingVisualizer from \"./components/SortingVisualizer\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <SortingVisualizer />\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}